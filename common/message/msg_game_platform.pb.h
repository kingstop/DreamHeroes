// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_game_platform.proto

#ifndef PROTOBUF_msg_5fgame_5fplatform_2eproto__INCLUDED
#define PROTOBUF_msg_5fgame_5fplatform_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace message {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_msg_5fgame_5fplatform_2eproto();
void protobuf_AssignDesc_msg_5fgame_5fplatform_2eproto();
void protobuf_ShutdownFile_msg_5fgame_5fplatform_2eproto();

class MsgS2PRegisterServer;
class MsgP2SClinchADealNotify;
class MsgS2PCloseDealMptify;

// ===================================================================

class MsgS2PRegisterServer : public ::google::protobuf::Message {
 public:
  MsgS2PRegisterServer();
  virtual ~MsgS2PRegisterServer();

  MsgS2PRegisterServer(const MsgS2PRegisterServer& from);

  inline MsgS2PRegisterServer& operator=(const MsgS2PRegisterServer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgS2PRegisterServer& default_instance();

  void Swap(MsgS2PRegisterServer* other);

  // implements Message ----------------------------------------------

  inline MsgS2PRegisterServer* New() const { return New(NULL); }

  MsgS2PRegisterServer* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgS2PRegisterServer& from);
  void MergeFrom(const MsgS2PRegisterServer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgS2PRegisterServer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 server_id = 1;
  bool has_server_id() const;
  void clear_server_id();
  static const int kServerIdFieldNumber = 1;
  ::google::protobuf::int32 server_id() const;
  void set_server_id(::google::protobuf::int32 value);

  // required int32 game_id = 2;
  bool has_game_id() const;
  void clear_game_id();
  static const int kGameIdFieldNumber = 2;
  ::google::protobuf::int32 game_id() const;
  void set_game_id(::google::protobuf::int32 value);

  // required int32 server_type = 3;
  bool has_server_type() const;
  void clear_server_type();
  static const int kServerTypeFieldNumber = 3;
  ::google::protobuf::int32 server_type() const;
  void set_server_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.MsgS2PRegisterServer)
 private:
  inline void set_has_server_id();
  inline void clear_has_server_id();
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_server_type();
  inline void clear_has_server_type();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 server_id_;
  ::google::protobuf::int32 game_id_;
  ::google::protobuf::int32 server_type_;
  friend void  protobuf_AddDesc_msg_5fgame_5fplatform_2eproto();
  friend void protobuf_AssignDesc_msg_5fgame_5fplatform_2eproto();
  friend void protobuf_ShutdownFile_msg_5fgame_5fplatform_2eproto();

  void InitAsDefaultInstance();
  static MsgS2PRegisterServer* default_instance_;
};
// -------------------------------------------------------------------

class MsgP2SClinchADealNotify : public ::google::protobuf::Message {
 public:
  MsgP2SClinchADealNotify();
  virtual ~MsgP2SClinchADealNotify();

  MsgP2SClinchADealNotify(const MsgP2SClinchADealNotify& from);

  inline MsgP2SClinchADealNotify& operator=(const MsgP2SClinchADealNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgP2SClinchADealNotify& default_instance();

  void Swap(MsgP2SClinchADealNotify* other);

  // implements Message ----------------------------------------------

  inline MsgP2SClinchADealNotify* New() const { return New(NULL); }

  MsgP2SClinchADealNotify* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgP2SClinchADealNotify& from);
  void MergeFrom(const MsgP2SClinchADealNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgP2SClinchADealNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string product_key = 1;
  bool has_product_key() const;
  void clear_product_key();
  static const int kProductKeyFieldNumber = 1;
  const ::std::string& product_key() const;
  void set_product_key(const ::std::string& value);
  void set_product_key(const char* value);
  void set_product_key(const char* value, size_t size);
  ::std::string* mutable_product_key();
  ::std::string* release_product_key();
  void set_allocated_product_key(::std::string* product_key);

  // required string order_id = 2;
  bool has_order_id() const;
  void clear_order_id();
  static const int kOrderIdFieldNumber = 2;
  const ::std::string& order_id() const;
  void set_order_id(const ::std::string& value);
  void set_order_id(const char* value);
  void set_order_id(const char* value, size_t size);
  ::std::string* mutable_order_id();
  ::std::string* release_order_id();
  void set_allocated_order_id(::std::string* order_id);

  // @@protoc_insertion_point(class_scope:message.MsgP2SClinchADealNotify)
 private:
  inline void set_has_product_key();
  inline void clear_has_product_key();
  inline void set_has_order_id();
  inline void clear_has_order_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr product_key_;
  ::google::protobuf::internal::ArenaStringPtr order_id_;
  friend void  protobuf_AddDesc_msg_5fgame_5fplatform_2eproto();
  friend void protobuf_AssignDesc_msg_5fgame_5fplatform_2eproto();
  friend void protobuf_ShutdownFile_msg_5fgame_5fplatform_2eproto();

  void InitAsDefaultInstance();
  static MsgP2SClinchADealNotify* default_instance_;
};
// -------------------------------------------------------------------

class MsgS2PCloseDealMptify : public ::google::protobuf::Message {
 public:
  MsgS2PCloseDealMptify();
  virtual ~MsgS2PCloseDealMptify();

  MsgS2PCloseDealMptify(const MsgS2PCloseDealMptify& from);

  inline MsgS2PCloseDealMptify& operator=(const MsgS2PCloseDealMptify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgS2PCloseDealMptify& default_instance();

  void Swap(MsgS2PCloseDealMptify* other);

  // implements Message ----------------------------------------------

  inline MsgS2PCloseDealMptify* New() const { return New(NULL); }

  MsgS2PCloseDealMptify* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgS2PCloseDealMptify& from);
  void MergeFrom(const MsgS2PCloseDealMptify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgS2PCloseDealMptify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string product_key = 1;
  bool has_product_key() const;
  void clear_product_key();
  static const int kProductKeyFieldNumber = 1;
  const ::std::string& product_key() const;
  void set_product_key(const ::std::string& value);
  void set_product_key(const char* value);
  void set_product_key(const char* value, size_t size);
  ::std::string* mutable_product_key();
  ::std::string* release_product_key();
  void set_allocated_product_key(::std::string* product_key);

  // required string order_id = 2;
  bool has_order_id() const;
  void clear_order_id();
  static const int kOrderIdFieldNumber = 2;
  const ::std::string& order_id() const;
  void set_order_id(const ::std::string& value);
  void set_order_id(const char* value);
  void set_order_id(const char* value, size_t size);
  ::std::string* mutable_order_id();
  ::std::string* release_order_id();
  void set_allocated_order_id(::std::string* order_id);

  // @@protoc_insertion_point(class_scope:message.MsgS2PCloseDealMptify)
 private:
  inline void set_has_product_key();
  inline void clear_has_product_key();
  inline void set_has_order_id();
  inline void clear_has_order_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr product_key_;
  ::google::protobuf::internal::ArenaStringPtr order_id_;
  friend void  protobuf_AddDesc_msg_5fgame_5fplatform_2eproto();
  friend void protobuf_AssignDesc_msg_5fgame_5fplatform_2eproto();
  friend void protobuf_ShutdownFile_msg_5fgame_5fplatform_2eproto();

  void InitAsDefaultInstance();
  static MsgS2PCloseDealMptify* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgS2PRegisterServer

// required int32 server_id = 1;
inline bool MsgS2PRegisterServer::has_server_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgS2PRegisterServer::set_has_server_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgS2PRegisterServer::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgS2PRegisterServer::clear_server_id() {
  server_id_ = 0;
  clear_has_server_id();
}
inline ::google::protobuf::int32 MsgS2PRegisterServer::server_id() const {
  // @@protoc_insertion_point(field_get:message.MsgS2PRegisterServer.server_id)
  return server_id_;
}
inline void MsgS2PRegisterServer::set_server_id(::google::protobuf::int32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:message.MsgS2PRegisterServer.server_id)
}

// required int32 game_id = 2;
inline bool MsgS2PRegisterServer::has_game_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgS2PRegisterServer::set_has_game_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgS2PRegisterServer::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgS2PRegisterServer::clear_game_id() {
  game_id_ = 0;
  clear_has_game_id();
}
inline ::google::protobuf::int32 MsgS2PRegisterServer::game_id() const {
  // @@protoc_insertion_point(field_get:message.MsgS2PRegisterServer.game_id)
  return game_id_;
}
inline void MsgS2PRegisterServer::set_game_id(::google::protobuf::int32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:message.MsgS2PRegisterServer.game_id)
}

// required int32 server_type = 3;
inline bool MsgS2PRegisterServer::has_server_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgS2PRegisterServer::set_has_server_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgS2PRegisterServer::clear_has_server_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgS2PRegisterServer::clear_server_type() {
  server_type_ = 0;
  clear_has_server_type();
}
inline ::google::protobuf::int32 MsgS2PRegisterServer::server_type() const {
  // @@protoc_insertion_point(field_get:message.MsgS2PRegisterServer.server_type)
  return server_type_;
}
inline void MsgS2PRegisterServer::set_server_type(::google::protobuf::int32 value) {
  set_has_server_type();
  server_type_ = value;
  // @@protoc_insertion_point(field_set:message.MsgS2PRegisterServer.server_type)
}

// -------------------------------------------------------------------

// MsgP2SClinchADealNotify

// required string product_key = 1;
inline bool MsgP2SClinchADealNotify::has_product_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgP2SClinchADealNotify::set_has_product_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgP2SClinchADealNotify::clear_has_product_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgP2SClinchADealNotify::clear_product_key() {
  product_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_product_key();
}
inline const ::std::string& MsgP2SClinchADealNotify::product_key() const {
  // @@protoc_insertion_point(field_get:message.MsgP2SClinchADealNotify.product_key)
  return product_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgP2SClinchADealNotify::set_product_key(const ::std::string& value) {
  set_has_product_key();
  product_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgP2SClinchADealNotify.product_key)
}
inline void MsgP2SClinchADealNotify::set_product_key(const char* value) {
  set_has_product_key();
  product_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgP2SClinchADealNotify.product_key)
}
inline void MsgP2SClinchADealNotify::set_product_key(const char* value, size_t size) {
  set_has_product_key();
  product_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgP2SClinchADealNotify.product_key)
}
inline ::std::string* MsgP2SClinchADealNotify::mutable_product_key() {
  set_has_product_key();
  // @@protoc_insertion_point(field_mutable:message.MsgP2SClinchADealNotify.product_key)
  return product_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgP2SClinchADealNotify::release_product_key() {
  clear_has_product_key();
  return product_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgP2SClinchADealNotify::set_allocated_product_key(::std::string* product_key) {
  if (product_key != NULL) {
    set_has_product_key();
  } else {
    clear_has_product_key();
  }
  product_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_key);
  // @@protoc_insertion_point(field_set_allocated:message.MsgP2SClinchADealNotify.product_key)
}

// required string order_id = 2;
inline bool MsgP2SClinchADealNotify::has_order_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgP2SClinchADealNotify::set_has_order_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgP2SClinchADealNotify::clear_has_order_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgP2SClinchADealNotify::clear_order_id() {
  order_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_order_id();
}
inline const ::std::string& MsgP2SClinchADealNotify::order_id() const {
  // @@protoc_insertion_point(field_get:message.MsgP2SClinchADealNotify.order_id)
  return order_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgP2SClinchADealNotify::set_order_id(const ::std::string& value) {
  set_has_order_id();
  order_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgP2SClinchADealNotify.order_id)
}
inline void MsgP2SClinchADealNotify::set_order_id(const char* value) {
  set_has_order_id();
  order_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgP2SClinchADealNotify.order_id)
}
inline void MsgP2SClinchADealNotify::set_order_id(const char* value, size_t size) {
  set_has_order_id();
  order_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgP2SClinchADealNotify.order_id)
}
inline ::std::string* MsgP2SClinchADealNotify::mutable_order_id() {
  set_has_order_id();
  // @@protoc_insertion_point(field_mutable:message.MsgP2SClinchADealNotify.order_id)
  return order_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgP2SClinchADealNotify::release_order_id() {
  clear_has_order_id();
  return order_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgP2SClinchADealNotify::set_allocated_order_id(::std::string* order_id) {
  if (order_id != NULL) {
    set_has_order_id();
  } else {
    clear_has_order_id();
  }
  order_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), order_id);
  // @@protoc_insertion_point(field_set_allocated:message.MsgP2SClinchADealNotify.order_id)
}

// -------------------------------------------------------------------

// MsgS2PCloseDealMptify

// required string product_key = 1;
inline bool MsgS2PCloseDealMptify::has_product_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgS2PCloseDealMptify::set_has_product_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgS2PCloseDealMptify::clear_has_product_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgS2PCloseDealMptify::clear_product_key() {
  product_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_product_key();
}
inline const ::std::string& MsgS2PCloseDealMptify::product_key() const {
  // @@protoc_insertion_point(field_get:message.MsgS2PCloseDealMptify.product_key)
  return product_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgS2PCloseDealMptify::set_product_key(const ::std::string& value) {
  set_has_product_key();
  product_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgS2PCloseDealMptify.product_key)
}
inline void MsgS2PCloseDealMptify::set_product_key(const char* value) {
  set_has_product_key();
  product_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgS2PCloseDealMptify.product_key)
}
inline void MsgS2PCloseDealMptify::set_product_key(const char* value, size_t size) {
  set_has_product_key();
  product_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgS2PCloseDealMptify.product_key)
}
inline ::std::string* MsgS2PCloseDealMptify::mutable_product_key() {
  set_has_product_key();
  // @@protoc_insertion_point(field_mutable:message.MsgS2PCloseDealMptify.product_key)
  return product_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgS2PCloseDealMptify::release_product_key() {
  clear_has_product_key();
  return product_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgS2PCloseDealMptify::set_allocated_product_key(::std::string* product_key) {
  if (product_key != NULL) {
    set_has_product_key();
  } else {
    clear_has_product_key();
  }
  product_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_key);
  // @@protoc_insertion_point(field_set_allocated:message.MsgS2PCloseDealMptify.product_key)
}

// required string order_id = 2;
inline bool MsgS2PCloseDealMptify::has_order_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgS2PCloseDealMptify::set_has_order_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgS2PCloseDealMptify::clear_has_order_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgS2PCloseDealMptify::clear_order_id() {
  order_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_order_id();
}
inline const ::std::string& MsgS2PCloseDealMptify::order_id() const {
  // @@protoc_insertion_point(field_get:message.MsgS2PCloseDealMptify.order_id)
  return order_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgS2PCloseDealMptify::set_order_id(const ::std::string& value) {
  set_has_order_id();
  order_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgS2PCloseDealMptify.order_id)
}
inline void MsgS2PCloseDealMptify::set_order_id(const char* value) {
  set_has_order_id();
  order_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgS2PCloseDealMptify.order_id)
}
inline void MsgS2PCloseDealMptify::set_order_id(const char* value, size_t size) {
  set_has_order_id();
  order_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgS2PCloseDealMptify.order_id)
}
inline ::std::string* MsgS2PCloseDealMptify::mutable_order_id() {
  set_has_order_id();
  // @@protoc_insertion_point(field_mutable:message.MsgS2PCloseDealMptify.order_id)
  return order_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgS2PCloseDealMptify::release_order_id() {
  clear_has_order_id();
  return order_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgS2PCloseDealMptify::set_allocated_order_id(::std::string* order_id) {
  if (order_id != NULL) {
    set_has_order_id();
  } else {
    clear_has_order_id();
  }
  order_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), order_id);
  // @@protoc_insertion_point(field_set_allocated:message.MsgS2PCloseDealMptify.order_id)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msg_5fgame_5fplatform_2eproto__INCLUDED
