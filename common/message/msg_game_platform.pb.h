// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_game_platform.proto

#ifndef PROTOBUF_msg_5fgame_5fplatform_2eproto__INCLUDED
#define PROTOBUF_msg_5fgame_5fplatform_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace message {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_msg_5fgame_5fplatform_2eproto();
void protobuf_AssignDesc_msg_5fgame_5fplatform_2eproto();
void protobuf_ShutdownFile_msg_5fgame_5fplatform_2eproto();

class MsgS2PRegisterServer;
class MsgP2SRegisterACK;
class MsgP2SClinchADealNotify;

enum PlatformError {
  PlatformError_NO = 0,
  PlatformError_Unknow = 1,
  PlatformError_AlreadyRegister = 2
};
bool PlatformError_IsValid(int value);
const PlatformError PlatformError_MIN = PlatformError_NO;
const PlatformError PlatformError_MAX = PlatformError_AlreadyRegister;
const int PlatformError_ARRAYSIZE = PlatformError_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlatformError_descriptor();
inline const ::std::string& PlatformError_Name(PlatformError value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlatformError_descriptor(), value);
}
inline bool PlatformError_Parse(
    const ::std::string& name, PlatformError* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlatformError>(
    PlatformError_descriptor(), name, value);
}
// ===================================================================

class MsgS2PRegisterServer : public ::google::protobuf::Message {
 public:
  MsgS2PRegisterServer();
  virtual ~MsgS2PRegisterServer();

  MsgS2PRegisterServer(const MsgS2PRegisterServer& from);

  inline MsgS2PRegisterServer& operator=(const MsgS2PRegisterServer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgS2PRegisterServer& default_instance();

  void Swap(MsgS2PRegisterServer* other);

  // implements Message ----------------------------------------------

  inline MsgS2PRegisterServer* New() const { return New(NULL); }

  MsgS2PRegisterServer* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgS2PRegisterServer& from);
  void MergeFrom(const MsgS2PRegisterServer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgS2PRegisterServer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 server_id = 1;
  bool has_server_id() const;
  void clear_server_id();
  static const int kServerIdFieldNumber = 1;
  ::google::protobuf::int32 server_id() const;
  void set_server_id(::google::protobuf::int32 value);

  // required int32 game_id = 2;
  bool has_game_id() const;
  void clear_game_id();
  static const int kGameIdFieldNumber = 2;
  ::google::protobuf::int32 game_id() const;
  void set_game_id(::google::protobuf::int32 value);

  // required int32 server_type = 3;
  bool has_server_type() const;
  void clear_server_type();
  static const int kServerTypeFieldNumber = 3;
  ::google::protobuf::int32 server_type() const;
  void set_server_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.MsgS2PRegisterServer)
 private:
  inline void set_has_server_id();
  inline void clear_has_server_id();
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_server_type();
  inline void clear_has_server_type();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 server_id_;
  ::google::protobuf::int32 game_id_;
  ::google::protobuf::int32 server_type_;
  friend void  protobuf_AddDesc_msg_5fgame_5fplatform_2eproto();
  friend void protobuf_AssignDesc_msg_5fgame_5fplatform_2eproto();
  friend void protobuf_ShutdownFile_msg_5fgame_5fplatform_2eproto();

  void InitAsDefaultInstance();
  static MsgS2PRegisterServer* default_instance_;
};
// -------------------------------------------------------------------

class MsgP2SRegisterACK : public ::google::protobuf::Message {
 public:
  MsgP2SRegisterACK();
  virtual ~MsgP2SRegisterACK();

  MsgP2SRegisterACK(const MsgP2SRegisterACK& from);

  inline MsgP2SRegisterACK& operator=(const MsgP2SRegisterACK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgP2SRegisterACK& default_instance();

  void Swap(MsgP2SRegisterACK* other);

  // implements Message ----------------------------------------------

  inline MsgP2SRegisterACK* New() const { return New(NULL); }

  MsgP2SRegisterACK* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgP2SRegisterACK& from);
  void MergeFrom(const MsgP2SRegisterACK& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgP2SRegisterACK* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .message.PlatformError error = 1 [default = PlatformError_NO];
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  ::message::PlatformError error() const;
  void set_error(::message::PlatformError value);

  // required string describe = 2;
  bool has_describe() const;
  void clear_describe();
  static const int kDescribeFieldNumber = 2;
  const ::std::string& describe() const;
  void set_describe(const ::std::string& value);
  void set_describe(const char* value);
  void set_describe(const char* value, size_t size);
  ::std::string* mutable_describe();
  ::std::string* release_describe();
  void set_allocated_describe(::std::string* describe);

  // @@protoc_insertion_point(class_scope:message.MsgP2SRegisterACK)
 private:
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_describe();
  inline void clear_has_describe();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr describe_;
  int error_;
  friend void  protobuf_AddDesc_msg_5fgame_5fplatform_2eproto();
  friend void protobuf_AssignDesc_msg_5fgame_5fplatform_2eproto();
  friend void protobuf_ShutdownFile_msg_5fgame_5fplatform_2eproto();

  void InitAsDefaultInstance();
  static MsgP2SRegisterACK* default_instance_;
};
// -------------------------------------------------------------------

class MsgP2SClinchADealNotify : public ::google::protobuf::Message {
 public:
  MsgP2SClinchADealNotify();
  virtual ~MsgP2SClinchADealNotify();

  MsgP2SClinchADealNotify(const MsgP2SClinchADealNotify& from);

  inline MsgP2SClinchADealNotify& operator=(const MsgP2SClinchADealNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgP2SClinchADealNotify& default_instance();

  void Swap(MsgP2SClinchADealNotify* other);

  // implements Message ----------------------------------------------

  inline MsgP2SClinchADealNotify* New() const { return New(NULL); }

  MsgP2SClinchADealNotify* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgP2SClinchADealNotify& from);
  void MergeFrom(const MsgP2SClinchADealNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgP2SClinchADealNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // required string product_id = 2;
  bool has_product_id() const;
  void clear_product_id();
  static const int kProductIdFieldNumber = 2;
  const ::std::string& product_id() const;
  void set_product_id(const ::std::string& value);
  void set_product_id(const char* value);
  void set_product_id(const char* value, size_t size);
  ::std::string* mutable_product_id();
  ::std::string* release_product_id();
  void set_allocated_product_id(::std::string* product_id);

  // required int32 order_id = 3;
  bool has_order_id() const;
  void clear_order_id();
  static const int kOrderIdFieldNumber = 3;
  ::google::protobuf::int32 order_id() const;
  void set_order_id(::google::protobuf::int32 value);

  // required uint64 user_id = 4;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 4;
  ::google::protobuf::uint64 user_id() const;
  void set_user_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:message.MsgP2SClinchADealNotify)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_product_id();
  inline void clear_has_product_id();
  inline void set_has_order_id();
  inline void clear_has_order_id();
  inline void set_has_user_id();
  inline void clear_has_user_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr product_id_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 order_id_;
  ::google::protobuf::uint64 user_id_;
  friend void  protobuf_AddDesc_msg_5fgame_5fplatform_2eproto();
  friend void protobuf_AssignDesc_msg_5fgame_5fplatform_2eproto();
  friend void protobuf_ShutdownFile_msg_5fgame_5fplatform_2eproto();

  void InitAsDefaultInstance();
  static MsgP2SClinchADealNotify* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgS2PRegisterServer

// required int32 server_id = 1;
inline bool MsgS2PRegisterServer::has_server_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgS2PRegisterServer::set_has_server_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgS2PRegisterServer::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgS2PRegisterServer::clear_server_id() {
  server_id_ = 0;
  clear_has_server_id();
}
inline ::google::protobuf::int32 MsgS2PRegisterServer::server_id() const {
  // @@protoc_insertion_point(field_get:message.MsgS2PRegisterServer.server_id)
  return server_id_;
}
inline void MsgS2PRegisterServer::set_server_id(::google::protobuf::int32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:message.MsgS2PRegisterServer.server_id)
}

// required int32 game_id = 2;
inline bool MsgS2PRegisterServer::has_game_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgS2PRegisterServer::set_has_game_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgS2PRegisterServer::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgS2PRegisterServer::clear_game_id() {
  game_id_ = 0;
  clear_has_game_id();
}
inline ::google::protobuf::int32 MsgS2PRegisterServer::game_id() const {
  // @@protoc_insertion_point(field_get:message.MsgS2PRegisterServer.game_id)
  return game_id_;
}
inline void MsgS2PRegisterServer::set_game_id(::google::protobuf::int32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:message.MsgS2PRegisterServer.game_id)
}

// required int32 server_type = 3;
inline bool MsgS2PRegisterServer::has_server_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgS2PRegisterServer::set_has_server_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgS2PRegisterServer::clear_has_server_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgS2PRegisterServer::clear_server_type() {
  server_type_ = 0;
  clear_has_server_type();
}
inline ::google::protobuf::int32 MsgS2PRegisterServer::server_type() const {
  // @@protoc_insertion_point(field_get:message.MsgS2PRegisterServer.server_type)
  return server_type_;
}
inline void MsgS2PRegisterServer::set_server_type(::google::protobuf::int32 value) {
  set_has_server_type();
  server_type_ = value;
  // @@protoc_insertion_point(field_set:message.MsgS2PRegisterServer.server_type)
}

// -------------------------------------------------------------------

// MsgP2SRegisterACK

// required .message.PlatformError error = 1 [default = PlatformError_NO];
inline bool MsgP2SRegisterACK::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgP2SRegisterACK::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgP2SRegisterACK::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgP2SRegisterACK::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::message::PlatformError MsgP2SRegisterACK::error() const {
  // @@protoc_insertion_point(field_get:message.MsgP2SRegisterACK.error)
  return static_cast< ::message::PlatformError >(error_);
}
inline void MsgP2SRegisterACK::set_error(::message::PlatformError value) {
  assert(::message::PlatformError_IsValid(value));
  set_has_error();
  error_ = value;
  // @@protoc_insertion_point(field_set:message.MsgP2SRegisterACK.error)
}

// required string describe = 2;
inline bool MsgP2SRegisterACK::has_describe() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgP2SRegisterACK::set_has_describe() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgP2SRegisterACK::clear_has_describe() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgP2SRegisterACK::clear_describe() {
  describe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_describe();
}
inline const ::std::string& MsgP2SRegisterACK::describe() const {
  // @@protoc_insertion_point(field_get:message.MsgP2SRegisterACK.describe)
  return describe_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgP2SRegisterACK::set_describe(const ::std::string& value) {
  set_has_describe();
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgP2SRegisterACK.describe)
}
inline void MsgP2SRegisterACK::set_describe(const char* value) {
  set_has_describe();
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgP2SRegisterACK.describe)
}
inline void MsgP2SRegisterACK::set_describe(const char* value, size_t size) {
  set_has_describe();
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgP2SRegisterACK.describe)
}
inline ::std::string* MsgP2SRegisterACK::mutable_describe() {
  set_has_describe();
  // @@protoc_insertion_point(field_mutable:message.MsgP2SRegisterACK.describe)
  return describe_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgP2SRegisterACK::release_describe() {
  clear_has_describe();
  return describe_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgP2SRegisterACK::set_allocated_describe(::std::string* describe) {
  if (describe != NULL) {
    set_has_describe();
  } else {
    clear_has_describe();
  }
  describe_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), describe);
  // @@protoc_insertion_point(field_set_allocated:message.MsgP2SRegisterACK.describe)
}

// -------------------------------------------------------------------

// MsgP2SClinchADealNotify

// required int32 status = 1;
inline bool MsgP2SClinchADealNotify::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgP2SClinchADealNotify::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgP2SClinchADealNotify::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgP2SClinchADealNotify::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 MsgP2SClinchADealNotify::status() const {
  // @@protoc_insertion_point(field_get:message.MsgP2SClinchADealNotify.status)
  return status_;
}
inline void MsgP2SClinchADealNotify::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:message.MsgP2SClinchADealNotify.status)
}

// required string product_id = 2;
inline bool MsgP2SClinchADealNotify::has_product_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgP2SClinchADealNotify::set_has_product_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgP2SClinchADealNotify::clear_has_product_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgP2SClinchADealNotify::clear_product_id() {
  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_product_id();
}
inline const ::std::string& MsgP2SClinchADealNotify::product_id() const {
  // @@protoc_insertion_point(field_get:message.MsgP2SClinchADealNotify.product_id)
  return product_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgP2SClinchADealNotify::set_product_id(const ::std::string& value) {
  set_has_product_id();
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgP2SClinchADealNotify.product_id)
}
inline void MsgP2SClinchADealNotify::set_product_id(const char* value) {
  set_has_product_id();
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgP2SClinchADealNotify.product_id)
}
inline void MsgP2SClinchADealNotify::set_product_id(const char* value, size_t size) {
  set_has_product_id();
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgP2SClinchADealNotify.product_id)
}
inline ::std::string* MsgP2SClinchADealNotify::mutable_product_id() {
  set_has_product_id();
  // @@protoc_insertion_point(field_mutable:message.MsgP2SClinchADealNotify.product_id)
  return product_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgP2SClinchADealNotify::release_product_id() {
  clear_has_product_id();
  return product_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgP2SClinchADealNotify::set_allocated_product_id(::std::string* product_id) {
  if (product_id != NULL) {
    set_has_product_id();
  } else {
    clear_has_product_id();
  }
  product_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_id);
  // @@protoc_insertion_point(field_set_allocated:message.MsgP2SClinchADealNotify.product_id)
}

// required int32 order_id = 3;
inline bool MsgP2SClinchADealNotify::has_order_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgP2SClinchADealNotify::set_has_order_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgP2SClinchADealNotify::clear_has_order_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgP2SClinchADealNotify::clear_order_id() {
  order_id_ = 0;
  clear_has_order_id();
}
inline ::google::protobuf::int32 MsgP2SClinchADealNotify::order_id() const {
  // @@protoc_insertion_point(field_get:message.MsgP2SClinchADealNotify.order_id)
  return order_id_;
}
inline void MsgP2SClinchADealNotify::set_order_id(::google::protobuf::int32 value) {
  set_has_order_id();
  order_id_ = value;
  // @@protoc_insertion_point(field_set:message.MsgP2SClinchADealNotify.order_id)
}

// required uint64 user_id = 4;
inline bool MsgP2SClinchADealNotify::has_user_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgP2SClinchADealNotify::set_has_user_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgP2SClinchADealNotify::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgP2SClinchADealNotify::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 MsgP2SClinchADealNotify::user_id() const {
  // @@protoc_insertion_point(field_get:message.MsgP2SClinchADealNotify.user_id)
  return user_id_;
}
inline void MsgP2SClinchADealNotify::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:message.MsgP2SClinchADealNotify.user_id)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace message

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::message::PlatformError> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::message::PlatformError>() {
  return ::message::PlatformError_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msg_5fgame_5fplatform_2eproto__INCLUDED
