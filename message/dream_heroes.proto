package message;
import "common.proto";
///GameLogic
enum GameError
{
	Error_NO = 0;
	Error_CanNotEnterGameTheInstanceIsLock = 1;
	Error_CanNotEnterGameTheCharacterIsLock = 2;
	Error_CanNotEnterGameTheSectionIsLock = 3;
	Error_CanNotBuyHeroNotEnoughgold = 4;
	Error_CanNotPassGameTheInstanceNotHaveEnoughGold = 5;
	Error_NotEnterTheExitGame = 6;
	Error_NotFoundTheChapterWhenEnterGame = 7;
	Error_TheChapterIsNotLock = 8;
	Error_UnlockChapterFailedNotFoundTheUnlockChapter = 9;
	Error_UnlockChapterFailedTheRequiredSectionNotPass = 10;
	Error_UnlockChapterFailedYouHaveToCompleteEnoughTasks = 11;
	Error_UnlockChapterFailedYouNotHaveEnoughGold = 12;
	Error_RefreshAdvertisementTaskFailedInCD = 13;
	Error_RefreshAdvertisementTaskFailedNotFoundGiveUpTaskID = 14;
	Error_RefreshAdvertisementTaskFailedUnknow = 15;
	Error_BuyHeroFailedNotEnoughGold = 16;
	Error_BuyHeroFailedThePriceIsOld = 17;
	Error_BuyHeroFailedNotFoundGrid = 18;
	Error_ModifyCurrentFailedTheCharacterIsLock = 19;
}
message MsgC2SReqShopConfig
{

}


message MsgS2CShopConfigACK
{
	repeated MsgShopConfigInfo shop_infos = 1;
}

message MsgC2SReqGameGlobalConfig
{

}

message MsgS2CSGameGlobalConfigACK
{
	repeated MsgChapterConfigInfo chapter_infos = 1;
}


message MsgS2CNewTaskNotify
{	
	required MsgTaskConfigInfo task = 1;
}

message MsgS2CHeroesInit
{
	required MsgHeroData info = 1;
	repeated MsgTaskConfigInfo task_config_infos = 2;
	required int32 free_advertisement_config_count = 3;
	required int32 current_advertisement_count = 4;
	required int64 last_advertisement_time = 5;
	required int32 advertisement_time_cd = 6;
}

message MsgC2SReqEnterGame
{
	required int32 chapter_id = 1;
	required int32 section_id = 2;
}


message MsgS2CEnterGameACK
{
	required int32 chapter_id = 1;
	required int32 section_id = 2;
	required GameError error = 3 [default=Error_NO];
}


message MsgC2SReqExitGame
{
	required int32 chapter_id = 1;
	required int32 section_id = 2;
	repeated MsgTaskInfo task_infos = 3; 
	required int32 gold = 4;
	required bool success = 5;
	repeated int32 complete_tasks = 6;
}

message MsgS2CExitGameACK
{
	required int32 chapter_id = 1;
	required int32 section_id = 2;
	repeated MsgTaskInfo task_infos = 3; 
	required int32 current_gold = 4;
	repeated MsgIntPair task_gift = 5;
	required bool success = 6;
	required GameError error = 7 [default=Error_NO];
}

message MsgC2SReqUnlockChapter
{
	required int32 chapter_id = 1;
}

message MsgC2SReqAdvertisementApplyTask
{

}

message MsgS2CAdvertisementApplyTaskACK
{
	required GameError error = 1 [default=Error_NO];
	repeated MsgTaskConfigInfo infos = 2;
}

message MsgC2SReqAdvertisementRefreshTask
{
	required int32 give_up_task_id = 1;
}

message MsgS2CAdvertisementRefreshTaskACK
{
	required int32 give_up_task_id = 1;
	required GameError error = 2 [default=Error_NO];
	repeated MsgTaskConfigInfo infos = 3;
}

message MsgC2SReqModifyCurrentHero
{
	required int32 current_grid = 1;
}

message MsgS2CModifyCurrentHeroACK
{
	required int32 current_grid = 1;
	required GameError error = 2 [default=Error_NO];
}

message MsgS2CUnlockChapterACK
{
	required int32 chapter_id = 1;
	required int32 current_gold = 2;
	required GameError error = 3 [default=Error_NO];
}

message MsgC2SReqBuyHero
{
	required int32 grid = 1;
	required int32 gold = 2;
}

message MsgS2CBuyHeroACK
{
	required int32 grid = 1;	
	required int32 current_gold = 2;	
	required GameError error = 3 [default=Error_NO];
}

message MsgC2SReqGoldShopConfigs
{

}

message MsgS2CGoldShopConfigsACK
{
	repeated MsgGoldShopConfigInfo infos = 1;
}