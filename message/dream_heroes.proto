package message;
import "common.proto";
///GameLogic
enum GameError
{
	Error_NO = 0;
	Error_CanNotEnterGameTheInstanceIsLock = 1;
	Error_CanNotEnterGameTheCharacterIsLock = 2;
	Error_CanNotEnterGameTheSectionIsLock = 3;
	Error_CanNotEnterGameNotEnoughSpirit = 4;
	Error_CanNotBuyHeroNotEnoughgold = 5;
	Error_CanNotPassGameTheInstanceNotHaveEnoughGold = 6;
	Error_NotEnterTheExitGame = 7;
	Error_NotFoundTheChapterWhenEnterGame = 8;
	Error_TheChapterIsNotLock = 9;
	Error_UnlockChapterFailedNotFoundTheUnlockChapter = 10;
	Error_UnlockChapterFailedTheRequiredSectionNotPass = 11;
	Error_UnlockChapterFailedYouHaveToCompleteEnoughTasks = 12;
	Error_UnlockChapterFailedYouNotHaveEnoughGold = 13;
	Error_RefreshAdvertisementTaskFailedInCD = 14;
	Error_RefreshAdvertisementTaskFailedNotFoundGiveUpTaskID = 15;
	Error_RefreshAdvertisementTaskFailedUnknow = 16;
	Error_RefreshAdvertisementTaskFailedNotEnoughGold = 17;
	Error_BuyHeroFailedNotEnoughGold = 18;
	Error_BuyHeroFailedThePriceIsOld = 19;
	Error_BuyHeroFailedNotFoundGrid = 20;
	Error_BuyHeroFailedNotPassRequiredSection = 21;
	Error_ModifyCurrentFailedTheCharacterIsLock = 22;
	Error_BuyGoldFailedNotFoundConfig = 23;
	Error_BuyGoldFailedNotFoundOrder = 24;
	Error_BuyGoldFailedTheOrderHaveBeenCompleted = 25;
	Error_CreateDealFailedTheHttpErrorRespone = 26;
	Error_CreateDealFailedTheHttpResponeFailed = 27;
	Error_CreateDealDailedTheHttpResponeErrorProduct_id = 28;
	Error_VerifyDealFailedTheHttpErrorRespone = 29;
	Error_VerifyDealFailedTheHttpResponeFailed = 30;
	Error_BuySpiritFailedNotEnoughJewel = 31;
	Error_BuySpiritFailedCanNotBuyMoreSpirit = 32;
	Error_BuySpiritFailedNotFoundConfig = 33;
	Error_CmdFailedRequiredGMLevel = 34;
	Error_ReliveFailedNotEnoughGod = 35;
	Error_FailedToBuyLotionNotEnoughGold = 36;
	Error_FailedToBuyLotionNotEnoughJewel = 37;
	Error_FailedToBuyLotionAlreadyHaveLotion = 38;
	Error_FailedToBuyNotFoundThisLotion = 39;
	Error_FailedExitGameNotFoundTheUseLotion = 40;
	Error_Unknow = 41;
}



message MsgS2CNotifyError
{
	required GameError error = 1 [default=Error_NO];
}
message MsgC2SReqShopConfig
{

}


message MsgS2CShopConfigACK
{
	repeated MsgShopConfigInfo shop_infos = 1;
}

message MsgC2SReqGameGlobalConfig
{

}

message MsgS2CSGameGlobalConfigACK
{
	repeated MsgChapterConfigInfo chapter_infos = 1;
}


message MsgS2CNewTaskNotify
{	
	required MsgTaskConfigInfo task = 1;
}

message MsgSpiritShopInfo
{
	required int32 index = 1;
	required int32 spirit = 2;
	required int32 need_jewel = 3;
	required int32 resource_id = 4;
	required string describe = 5;
}

enum LotionUseType
{
	LotionUseType_gold = 1;
	LotionUseType_jewel = 2;
}

message MsgLotionShopConfigInfo
{
	required int32 lotion_id = 1;
	required LotionUseType use_type = 2 [default = LotionUseType_gold];
	required int32 use_count = 3;
	required int32 resource_id = 4;
	required string describe = 5;

}

message MsgS2CHeroesInit
{
	required MsgHeroData info = 1;
	repeated MsgTaskConfigInfo task_config_infos = 2;
	required int32 free_advertisement_config_count = 3;
	required int32 current_advertisement_count = 4;
	required int64 last_advertisement_time = 5;
	required int32 advertisement_time_cd = 6;
	required int32 gm_level = 7;
	repeated MsgIntPair special_creatures = 8;
	required int32 relive_gold = 9;
	required int32 refresh_task_gold = 10;
	required int32 max_spirit = 11;
	required int32 config_recover_spirit_minute = 12;
	required int32 config_recover_spirit = 13;
	required int32 config_enter_game_use_spirit = 14;
	repeated MsgSpiritShopInfo sprit_shop_infos = 15;
	required int32 config_day_buy_spirit = 16;
	required int32 last_recover_spirit_time = 17;	
	required int32 last_buy_spirit_time = 18;
	required int32 day_refresh_time = 19;
	repeated MsgLotionShopConfigInfo lotion_shop_configs = 20;
	required uint32 last_lottery_time = 21;

}


message MsgC2SReqDayLottery
{
	
}

enum enLotteryBox
{
	Lottery_Jewel = 0;
	Lottery_Gold = 1;
	Lottery_Lotion = 2;
};


message MsgS2CDayLotteryACK
{
	required GameError error = 1 [default=Error_NO];
	required  enLotteryBox type = 2[default=Lottery_Jewel];
	required int32 index = 3;
	required int32 count = 4;
	required int32 current_jewel = 5;
	required int32 current_gold = 6;
	repeated int32 current_lotions = 7;
}

message MsgC2SReqBuyLotion
{
	required int32 lotion_id = 1;
}


message MsgS2CBuyLotionACK
{
	required int32 lotion_id = 1;
	required int32 current_gold = 2;
	required int32 current_jewel = 3;
	required GameError error = 4 [default=Error_NO];
}


message MsgC2SReqBuySpirit
{
	required int32 index = 1;
}

message MsgS2CBuySpiritACK
{
	required int32 index = 1;
	required int32 jewel = 2;
	required int32 spirit = 3;
	required GameError error = 4 [default=Error_NO];
}



message MsgC2SReqEnterGame
{
	required int32 chapter_id = 1;
	required int32 section_id = 2;
}


message MsgS2CEnterGameACK
{
	required int32 chapter_id = 1;
	required int32 section_id = 2;
	repeated MsgDropBoxConfig drop_box_configs = 3;
	repeated MsgObjConfig kill_list = 4;
	required GameError error = 5 [default=Error_NO];
	required int32 spirit = 6;
	
}


message MsgKillHistroy
{
	required MsgObjConfig obj = 1;
	required int32 count = 2;
}

message MsgC2SReqExitGame
{
	required int32 chapter_id = 1;
	required int32 section_id = 2;
	repeated MsgTaskInfo task_infos = 3; 
	required int32 gold = 4;
	required bool success = 5;
	repeated int32 complete_tasks = 6;
	repeated MsgObjConfig special_kill_list = 7;
	repeated MsgKillHistroy kill_list = 8;
	repeated MsgIntPair special_creatures = 9;
	repeated int32 use_lotions = 10;
}

message MsgS2CExitGameACK
{
	required int32 chapter_id = 1;
	required int32 section_id = 2;
	repeated MsgTaskInfo task_infos = 3; 
	required int32 current_gold = 4;
	repeated MsgIntPair task_gift = 5;
	required bool success = 6;
	required int32 complete_task_count = 7;
	required GameError error = 8 [default=Error_NO];
	repeated MsgIntPair special_creatures = 9;
	repeated int32 current_lotions = 10;
}

message MsgC2SReqUnlockChapter
{
	required int32 chapter_id = 1;
}

message MsgC2SReqAdvertisementApplyTask
{
	required bool gold = 1;
}

message MsgS2CAdvertisementApplyTaskACK
{
	required GameError error = 1 [default=Error_NO];
	repeated MsgTaskConfigInfo infos = 2;
	required int32 current_gold = 3;
}

message MsgC2SReqAdvertisementRefreshTask
{
	required int32 give_up_task_id = 1;
	required bool gold = 2;
}

message MsgS2CAdvertisementRefreshTaskACK
{
	required int32 give_up_task_id = 1;
	required GameError error = 2 [default=Error_NO];
	repeated MsgTaskConfigInfo infos = 3;
	required int32 current_gold = 4;
}

message MsgC2SReqModifyCurrentHero
{
	required int32 current_grid = 1;
}

message MsgS2CModifyCurrentHeroACK
{
	required int32 current_grid = 1;
	required GameError error = 2 [default=Error_NO];
}

message MsgS2CUnlockChapterACK
{
	required int32 chapter_id = 1;
	required int32 current_gold = 2;
	required GameError error = 3 [default=Error_NO];
}

message MsgC2SReqBuyHero
{
	required int32 grid = 1;
	required int32 gold = 2;
}

message MsgS2CBuyHeroACK
{
	required int32 grid = 1;	
	required int32 current_gold = 2;	
	required GameError error = 3 [default=Error_NO];
}

message MsgC2SReqGoldShopConfigs
{

}

message MsgS2CGoldShopConfigsACK
{
	repeated MsgGoldShopConfigInfo infos = 1;
}


message MsgC2SReqCrearteIOSDeal
{
	required string key_code = 1;
}

message MsgS2CCrearteIOSDealACK
{
	required string key_code = 1;
	required int32 status = 2;
	required int32 price = 3;
	required int32 order_id = 4;
	required GameError error = 5 [default=Error_NO];
}

message MsgC2SReqVerifyDealIOS
{
	required string receipt = 1;
	required int32 order_id = 2;
}

message MsgS2CVerifyDealIOSACK
{	
	required string product_id = 1;
	required int32 status = 2;
	required int32 order_id = 3;
	required int32 current_gold = 4;
	required GameError error = 5 [default=Error_NO];
}

message MsgS2CPingNotify
{
	required int32 ping_count = 1;
	required uint64 time = 2;
}


message MsgS2CRecoverSpiritNotify
{
	required int32 current_spirit = 1;
}

message MsgC2SPingNotify
{
	required int32 ping_count = 1;
	required uint64 time = 2;
}

message MsgC2SReqModifyNewTutorial
{
	required int32 flag = 1;
}

message MsgS2CModifyNewTutorialACK
{
	required int32 flag = 1;
}

message MsgC2SReliveReq
{

}

message MsgS2CReliveACK
{
	required int32 current_gold = 1;
	required GameError error = 2 [default=Error_NO];
}

//////////////////////////////////////////////////////////////////////////////////////////
message MsgC2SCmdReqRemoveSpecialCreatureListHis
{

}



message MsgC2SCmdReqSetSpecialCreatureHis
{
	required int32 creature_id = 1;
	required int32 status = 2; //0 删除

}

message MsgS2CCmdNotifySpecialCreatureHisModify
{
	repeated MsgIntPair special_creatures = 1;
}


message MsgC2SCmdReqModifyTaskCompleteCount
{
	required int32 task_complete_count = 1;
}

message MsgS2CCmdModifyTaskCompleteCountACK
{
	required int32 current_task_count = 1;
}

message MsgC2SCmdReqShowGMLevel
{
	
}

message MsgS2CCmdShowGMLevelACK
{
	required int32 gm_level = 1;
	required GameError error = 2 [default=Error_NO];
}

message MsgC2SCmdReqModifyGMLevel
{
	required string name = 1;
	required int32 level = 2;
	
}


message MsgS2CCmdModifyGMLevelACK
{
	required string name = 1;
	required int32 level = 2;
	required GameError error = 3 [default=Error_NO];
}

message MsgC2SCmdReqEnterGame
{
	required int32 chapter_id = 1;
	required int32 section_id = 2;
}

message MsgC2SCmdReqResetMap
{
	required int32 chapter_id = 1;
	required int32 section_id = 2;
}

message MsgS2CCmdResetMapACK
{
	required int32 chapter_id = 1;
	required int32 section_id = 2;
	required GameError error = 3 [default=Error_NO];
}

message MsgC2SCmdReqResetGame
{

}

message MsgS2CCmdResetGameACK
{
	required MsgHeroData info = 1;
	required int32 current_advertisement_count = 2;
	required int64 last_advertisement_time = 3;
	required GameError error = 4 [default=Error_NO];
}

message MsgC2SCmdReqModifyGold
{
	required int32 gold = 1;
}

message MsgS2CCmdModifyGoldACK
{
	required int32 gold = 1;
}


message MsgS2CCmdReqReplaceTask
{
	required int32 task_count = 1;
	
}

message MsgS2CCmdReplaceTaskACK
{
	required GameError error = 1 [default=Error_NO];
	repeated MsgTaskConfigInfo infos = 2;
}

message MsgC2SCmdReqModifyJewel
{
	required int32 jewel = 1;
}

message MsgS2CCmdModifyJewelACK
{
	required int32 current_jewel = 1;
	required GameError error = 2 [default=Error_NO];
}


message MsgC2SCmdReqModifySpirit
{
	required int32 spirit = 1;
}

message MsgS2CCmdModifySpiritACK
{
	required int32 current_spirit = 1;
	required GameError error = 2 [default=Error_NO];
}


//////////////////////////////////////////////////////////////////////////////////////////